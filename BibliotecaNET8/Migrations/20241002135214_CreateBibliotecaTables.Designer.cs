// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using BibliotecaNET8.Context;

#nullable disable

namespace BibliotecaNET8.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241002135214_CreateBibliotecaTables")]
    partial class CreateBibliotecaTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaNET8.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Shelley",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Mary"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "Tolstoi",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Leon"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Verne",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Julio"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Wilde",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Oscar"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Woolf",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Virginia"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "Allan Poe",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Edgar"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Austen",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Jane"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "Saavedra",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Miguel de Cervantes"
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "Chistie",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Agatha"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Coelho",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Paulo"
                        },
                        new
                        {
                            Id = 11,
                            Apellido = "Dickens",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Charles "
                        },
                        new
                        {
                            Id = 12,
                            Apellido = "Follet",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Ken"
                        },
                        new
                        {
                            Id = 13,
                            Apellido = "García Lorca",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Federico"
                        },
                        new
                        {
                            Id = 14,
                            Apellido = "García Márquez",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Gabriel"
                        },
                        new
                        {
                            Id = 15,
                            Apellido = "Highsmith",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Patricia"
                        },
                        new
                        {
                            Id = 16,
                            Apellido = "Hugo",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Víctor"
                        },
                        new
                        {
                            Id = 17,
                            Apellido = "Joyce",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "James"
                        },
                        new
                        {
                            Id = 18,
                            Apellido = "Kafka",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Franz"
                        },
                        new
                        {
                            Id = 19,
                            Apellido = "King",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Stephen"
                        },
                        new
                        {
                            Id = 20,
                            Apellido = "Hemingway",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Ernest"
                        },
                        new
                        {
                            Id = 21,
                            Apellido = "Lope de Vega",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Félix"
                        },
                        new
                        {
                            Id = 22,
                            Apellido = "Melville",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Herman"
                        },
                        new
                        {
                            Id = 23,
                            Apellido = "Neruda",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Pablo"
                        },
                        new
                        {
                            Id = 24,
                            Apellido = "Proust",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "Marcel"
                        },
                        new
                        {
                            Id = 25,
                            Apellido = "Shakespeare",
                            FechaNacimiento = new DateTime(2024, 10, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            Nombre = "William"
                        });
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Suspenso"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Romance"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Drama"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Terror"
                        });
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "Díaz Ramírez",
                            Email = "test@test.com",
                            Nombre = "José",
                            Telefono = "999123456"
                        },
                        new
                        {
                            Id = 2,
                            Apellido = "García López",
                            Email = "test2@test.com",
                            Nombre = "Antonio",
                            Telefono = "999234567"
                        },
                        new
                        {
                            Id = 3,
                            Apellido = "Casado Mijares",
                            Email = "test3@test.com",
                            Nombre = "Pedro",
                            Telefono = "999345678"
                        },
                        new
                        {
                            Id = 4,
                            Apellido = "Ramos Espinar",
                            Email = "test4@test.com",
                            Nombre = "Ana",
                            Telefono = "999456789"
                        },
                        new
                        {
                            Id = 5,
                            Apellido = "Escámez García",
                            Email = "test5@test.com",
                            Nombre = "Laura",
                            Telefono = "999987654"
                        },
                        new
                        {
                            Id = 6,
                            Apellido = "González",
                            Email = "test6@test.com",
                            Nombre = "Sofía",
                            Telefono = "3468683"
                        },
                        new
                        {
                            Id = 7,
                            Apellido = "Rodríguez",
                            Email = "test7@test.com",
                            Nombre = "Alejandro",
                            Telefono = "79934563"
                        },
                        new
                        {
                            Id = 8,
                            Apellido = "García",
                            Email = "test8@test.com",
                            Nombre = "Laura",
                            Telefono = ""
                        },
                        new
                        {
                            Id = 9,
                            Apellido = "López",
                            Email = "test9@test.com",
                            Nombre = "David",
                            Telefono = "82663902"
                        },
                        new
                        {
                            Id = 10,
                            Apellido = "Martín",
                            Email = "test10@test.com",
                            Nombre = "María",
                            Telefono = ""
                        });
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            CategoriaId = 1,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "087402",
                            Titulo = "Los Pilares de la Tierra"
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            CategoriaId = 2,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "4684",
                            Titulo = "Moby Dick"
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            CategoriaId = 3,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "68453",
                            Titulo = "El resplandor"
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            CategoriaId = 4,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "867832",
                            Titulo = "La metamorfosis"
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 5,
                            CategoriaId = 5,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "En busca del tiempo perdido"
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 6,
                            CategoriaId = 1,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "El Retrato de Dorian Gray"
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 7,
                            CategoriaId = 2,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "La vuelta al mundo en 80 días"
                        },
                        new
                        {
                            Id = 8,
                            AutorId = 8,
                            CategoriaId = 3,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "Guerra y Paz"
                        },
                        new
                        {
                            Id = 9,
                            AutorId = 9,
                            CategoriaId = 4,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "Frankenstein"
                        },
                        new
                        {
                            Id = 10,
                            AutorId = 10,
                            CategoriaId = 5,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "Los miserables"
                        },
                        new
                        {
                            Id = 11,
                            AutorId = 11,
                            CategoriaId = 1,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "El talento de Mr. Ripley"
                        },
                        new
                        {
                            Id = 12,
                            AutorId = 12,
                            CategoriaId = 2,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "Romeo y Julieta"
                        },
                        new
                        {
                            Id = 13,
                            AutorId = 13,
                            CategoriaId = 3,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "La casa de Bernarda Alba"
                        },
                        new
                        {
                            Id = 14,
                            AutorId = 14,
                            CategoriaId = 4,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "Oliver Twist"
                        },
                        new
                        {
                            Id = 15,
                            AutorId = 15,
                            CategoriaId = 5,
                            FechaPublicacion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ISBN = "0275935",
                            Titulo = "El alquimista"
                        });
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("LibroId");

                    b.ToTable("Prestamo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 1,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 2,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 3,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClienteId = 4,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClienteId = 5,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            ClienteId = 6,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            ClienteId = 7,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            ClienteId = 8,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            ClienteId = 9,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            ClienteId = 10,
                            FechaDevolucion = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaPrestamo = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Libro", b =>
                {
                    b.HasOne("BibliotecaNET8.Models.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaNET8.Models.Categoria", "Categoria")
                        .WithMany("Libros")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaNET8.Models.Cliente", null)
                        .WithMany("Libros")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Prestamo", b =>
                {
                    b.HasOne("BibliotecaNET8.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BibliotecaNET8.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Categoria", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("BibliotecaNET8.Models.Cliente", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
